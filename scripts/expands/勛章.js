/**
 * 抽獎
 *
 * 機制說明： 抽獎首先會生成0-100的隨機數，獎品裡面機率大於這個數的才會進入最終獎池，最終獲得的獎品將在最終獎池裡面隨機獲得一箇。
 *
 **/

let type = 5530001;// 1=點券 2=抵用 3=金幣 4=餘額 物品ID=材料抽獎
let needNum = 1;//需要數量
let title = "";
let haveMoney = 0;

//獎品
let laba = 200;//公告喇叭需要的機率
let items = Array(
    //物品ID 數量 機率(機率請寫100以下,只有機率在laba以下的才會喇叭公告)
    Array(1140001, 1, 100),
    Array(1140002, 1, 100),
    Array(1141000, 1, 100),
    Array(1141001, 1, 100),
    Array(1141002, 1, 100),
    Array(1142000, 1, 100),
    Array(1142001, 1, 100),
    Array(1142002, 1, 100),
    Array(1142003, 1, 100),
    Array(1143270, 1, 100),
    Array(1142004, 1, 100),
    Array(1142005, 1, 100),
    Array(1142006, 1, 100),
    Array(1142007, 1, 100),
    Array(1142008, 1, 100),
    Array(1142009, 1, 100),
    Array(1142010, 1, 100),
    Array(1142011, 1, 100),
    Array(1142013, 1, 100),
    Array(1142014, 1, 100),
    Array(1142015, 1, 100),
    Array(1142016, 1, 100),
    Array(1142017, 1, 100),
    Array(1142018, 1, 100),
    Array(1142019, 1, 100),
    Array(1142020, 1, 100),
    Array(1142021, 1, 100),
    Array(1142022, 1, 100),
    Array(1142023, 1, 100),
    Array(1142024, 1, 100),
    Array(1142025, 1, 100),
    Array(1142026, 1, 100),
    Array(1142027, 1, 100),
    Array(1142028, 1, 100),
    Array(1142029, 1, 100),
    Array(1142030, 1, 100),
    Array(1142031, 1, 100),
    Array(1142032, 1, 100),
    Array(1142033, 1, 100),
    Array(1142034, 1, 100),
    Array(1142035, 1, 100),
    Array(1142036, 1, 100),
    Array(1142037, 1, 100),
    Array(1142038, 1, 100),
    Array(1142039, 1, 100),
    Array(1142040, 1, 100),
    Array(1142041, 1, 100),
    Array(1142042, 1, 100),
    Array(1142043, 1, 100),
    Array(1142044, 1, 100),
    Array(1142045, 1, 100),
    Array(1142046, 1, 100),
    Array(1142047, 1, 100),
    Array(1142048, 1, 100),
    Array(1142049, 1, 100),
    Array(1142050, 1, 100),
    Array(1142051, 1, 100),
    Array(1142052, 1, 100),
    Array(1142053, 1, 100),
    Array(1142054, 1, 100),
    Array(1142055, 1, 100),
    Array(1142056, 1, 100),
    Array(1142057, 1, 100),
    Array(1142058, 1, 100),
    Array(1142059, 1, 100),
    Array(1142060, 1, 100),
    Array(1142061, 1, 100),
    Array(1142062, 1, 100),
    Array(1142063, 1, 100),
    Array(1142064, 1, 100),
    Array(1142065, 1, 100),
    Array(1142066, 1, 100),
    Array(1142067, 1, 100),
    Array(1142068, 1, 100),
    Array(1142069, 1, 100),
    Array(1142070, 1, 100),
    Array(1142071, 1, 100),
    Array(1142072, 1, 100),
    Array(1142073, 1, 100),
    Array(1142074, 1, 100),
    Array(1142075, 1, 100),
    Array(1142076, 1, 100),
    Array(1142077, 1, 100),
    Array(1142078, 1, 100),
    Array(1142079, 1, 100),
    Array(1142080, 1, 100),
    Array(1142081, 1, 100),
    Array(1142082, 1, 100),
    Array(1142083, 1, 100),
    Array(1142084, 1, 100),
    Array(1142085, 1, 100),
    Array(1142086, 1, 100),
    Array(1142087, 1, 100),
    Array(1142088, 1, 100),
    Array(1142089, 1, 100),
    Array(1142090, 1, 100),
    Array(1142091, 1, 100),
    Array(1142092, 1, 100),
    Array(1142093, 1, 100),
    Array(1142094, 1, 100),
    Array(1142095, 1, 100),
    Array(1142096, 1, 100),
    Array(1142097, 1, 100),
    Array(1142098, 1, 100),
    Array(1142099, 1, 100),
    Array(1142100, 1, 100),
    Array(1142101, 1, 100),
    Array(1142107, 1, 100),
    Array(1142108, 1, 100),
    Array(1142109, 1, 100),
    Array(1142110, 1, 100),
    Array(1142111, 1, 100),
    Array(1142112, 1, 100),
    Array(1142113, 1, 100),
    Array(1142114, 1, 100),
    Array(1142115, 1, 100),
    Array(1142116, 1, 100),
    Array(1142117, 1, 100),
    Array(1142118, 1, 100),
    Array(1142119, 1, 100),
    Array(1142120, 1, 100),
    Array(1142122, 1, 100),
    Array(1142123, 1, 100),
    Array(1142124, 1, 100),
    Array(1142125, 1, 100),
    Array(1142126, 1, 100),
    Array(1142134, 1, 100),
    Array(1142135, 1, 100),
    Array(1142136, 1, 100),
    Array(1142137, 1, 100),
    Array(1142138, 1, 100),
    Array(1142139, 1, 100),
    Array(1142140, 1, 100),
    Array(1142141, 1, 100),
    Array(1142142, 1, 100),
    Array(1142143, 1, 100),
    Array(1142144, 1, 100),
    Array(1142149, 1, 100),
    Array(1142150, 1, 100),
    Array(1142151, 1, 100),
    Array(1142166, 1, 100),
    Array(1142187, 1, 100),
    Array(1142188, 1, 100),
    Array(1142190, 1, 100),
    Array(1142191, 1, 100),
    Array(1142217, 1, 100),
    Array(1142218, 1, 100),
    Array(1142228, 1, 100),
    Array(1142263, 1, 100),
    Array(1142264, 1, 100),
    Array(1142265, 1, 100),
    Array(1142295, 1, 100),
    Array(1142296, 1, 100),
    Array(1142297, 1, 100),
    Array(1142298, 1, 100),
    Array(1142299, 1, 100),
    Array(1142300, 1, 100),
    Array(1142301, 1, 100),
    Array(1142305, 1, 100),
    Array(1142306, 1, 100),
    Array(1142307, 1, 100),
    Array(1142329, 1, 100),
    Array(1142334, 1, 100),
    Array(1142335, 1, 100),
    Array(1142349, 1, 100),
    Array(1142358, 1, 100),
    Array(1142360, 1, 100),
    Array(1142373, 1, 100),
    Array(1142406, 1, 100),
    Array(1142408, 1, 100),
    Array(1142441, 1, 100),
    Array(1142442, 1, 100),
    Array(1142443, 1, 100),
    Array(1142444, 1, 100),
    Array(1142457, 1, 100),
    Array(1142477, 1, 100),
    Array(1142511, 1, 100),
    Array(1142512, 1, 100),
    Array(1142543, 1, 100),
    Array(1142558, 1, 100),
    Array(1142569, 1, 100),
    Array(1142573, 1, 100),
    Array(1142627, 1, 100),
    Array(1142656, 1, 100),
    Array(1142967, 1, 100),
    Array(1190101, 1, 100),
    Array(1190546, 1, 100),
    Array(1142178, 1, 100),
    Array(1142229, 1, 100),
    Array(1142230, 1, 100),
    Array(1142231, 1, 100),
    Array(1142232, 1, 100),
    Array(1142233, 1, 100),
    Array(1142234, 1, 100),
    Array(1142235, 1, 100),
    Array(1142260, 1, 100),
    Array(1142289, 1, 100),
    Array(1142290, 1, 100),
    Array(1142291, 1, 100),
    Array(1142308, 1, 100),
    Array(1142309, 1, 100),
    Array(1142357, 1, 100),
    Array(1142371, 1, 100),
    Array(1142445, 1, 100),
    Array(1142446, 1, 100),
    Array(1142447, 1, 100),
    Array(1142448, 1, 100),
    Array(1142471, 1, 100),
    Array(1142473, 1, 100),
    Array(1142474, 1, 100),
    Array(1142475, 1, 100),
    Array(1142490, 1, 100),
    Array(1142491, 1, 100),
    Array(1142492, 1, 100),
    Array(1142493, 1, 100),
    Array(1142494, 1, 100),
    Array(1142506, 1, 100),
    Array(1142507, 1, 100),
    Array(1142508, 1, 100),
    Array(1142509, 1, 100),
    Array(1142510, 1, 100),
    Array(1142638, 1, 100),
    Array(1142639, 1, 100),
    Array(1142640, 1, 100),
    Array(1142641, 1, 100),
    Array(1142676, 1, 100),
    Array(1142677, 1, 100),
    Array(1142678, 1, 100),
    Array(1142679, 1, 100),
    Array(1142697, 1, 100),
    Array(1142721, 1, 100),
    Array(1142786, 1, 100),
    Array(1142788, 1, 100),
    Array(1142790, 1, 100),
    Array(1142791, 1, 100),
    Array(1142792, 1, 100),
    Array(1142793, 1, 100),
    Array(1142794, 1, 100),
    Array(1142805, 1, 100),
    Array(1142813, 1, 100),
    Array(1182076, 1, 100),
    Array(1182077, 1, 100),
    Array(1182078, 1, 100),
    Array(1182092, 1, 100),
    Array(1182093, 1, 100),
    Array(1182094, 1, 100),
    Array(1182095, 1, 100),
    Array(1182096, 1, 100),
    Array(1142795, 1, 100),
    Array(1142758, 1, 100),
    Array(1182259, 1, 100),
    Array(1142970, 1, 100),
    Array(1142988, 1, 100),
    Array(1143009, 1, 100),
    Array(1143026, 1, 100),
    Array(1143007, 1, 100),
    Array(1143008, 1, 100),
    Array(1143043, 1, 100),
    Array(1143066, 1, 100),
    Array(1143067, 1, 100),
    Array(1143068, 1, 100),
    Array(1143069, 1, 100),
    Array(1143070, 1, 100),
    Array(1143071, 1, 100),
    Array(1143072, 1, 100),
    Array(1143073, 1, 100),
    Array(1143074, 1, 100),
    Array(1143075, 1, 100),
    Array(1143076, 1, 100),
    Array(1143077, 1, 100),
    Array(1143112, 1, 100),
    Array(1143220, 1, 100),
    Array(1143233, 1, 100),
    Array(1142403, 1, 100),
    Array(1143199, 1, 100),
    Array(1142871, 1, 100),
    Array(1142966, 1, 100),
    Array(1142393, 1, 100),
    Array(1143037, 1, 100),
    Array(1142836, 1, 100),
    Array(1143115, 1, 100),
    Array(1143242, 1, 100),
    Array(1143240, 1, 100),
    Array(1143139, 1, 100),
    Array(1143064, 1, 100),
    Array(1143059, 1, 100),
    Array(1143136, 1, 100),
    Array(1143105, 1, 100),
    Array(1143102, 1, 100),
    Array(1143141, 1, 100),
    Array(1143217, 1, 100),
    Array(1142888, 1, 100),
    Array(1142971, 1, 100),
    Array(1142908, 1, 100),
    Array(1142907, 1, 100),
    Array(1143126, 1, 100),
    Array(1142884, 1, 100),
    Array(1142834, 1, 100),
    Array(1142835, 1, 100),
    Array(1142789, 1, 100),
    Array(1142723, 1, 100),
    Array(1142667, 1, 100),
    Array(1142666, 1, 100),
    Array(1143000, 1, 100),
    Array(1142925, 1, 100),
    Array(1143265, 1, 100),
    Array(1143271, 1, 100),
    Array(1143255, 1, 100),
    Array(1143244, 1, 100),
    Array(1142955, 1, 100),
    Array(1142960, 1, 100),
    Array(1143009, 1, 100),
    Array(1142759, 1, 100),
    Array(1143021, 1, 100),
    Array(1142760, 1, 100),
    Array(1142761, 1, 100),
    Array(1142762, 1, 100),
    Array(1142763, 1, 100),
    Array(1142840, 1, 100),
    Array(1143271, 1, 100),
    Array(1143265, 1, 100),
    Array(1143259, 1, 100),
    Array(1143258, 1, 100),
    Array(1143246, 1, 100),
    Array(1143239, 1, 100),
    Array(1143238, 1, 100),
    Array(1143236, 1, 100),
    Array(1143240, 1, 100),
    Array(1143236, 1, 100),
    Array(1143240, 1, 100),
    Array(1143232, 1, 100),
    Array(1143225, 1, 100),
    Array(1143199, 1, 100),
    Array(1143198, 1, 100),
    Array(1143197, 1, 100),
    Array(1143185, 1, 100),
    Array(1143183, 1, 100),
    Array(1143174, 1, 100),
    Array(1143160, 1, 100),
    Array(1143129, 1, 100),
    Array(1143116, 1, 100),
    Array(1143114, 1, 100),
    Array(1143035, 1, 100),
    Array(1142834, 1, 100),
    Array(1142813, 1, 100),
    Array(1142681, 1, 100),
    Array(1142669, 1, 100),
    Array(1142654, 1, 100),
    Array(1142440, 1, 100),
    Array(1142499, 1, 100),
    Array(1142145, 1, 100),
    Array(1143169, 1, 100),
    Array(1142597, 1, 100),
    Array(1142606, 1, 100),
    Array(1142623, 1, 100),
    Array(1142694, 1, 100),
    Array(1142695, 1, 100),
    Array(1142704, 1, 100),
    Array(1142705, 1, 100),
    Array(1142900, 1, 100),
    Array(1142954, 1, 100),
    Array(1142955, 1, 100),
    Array(1142973, 1, 100),
    Array(1142974, 1, 100),
    Array(1142975, 1, 100),
    Array(1142976, 1, 100),
    Array(1143020, 1, 100),
    Array(1143096, 1, 100),
    Array(1143158, 1, 100),
    Array(1142205, 1, 100),
    Array(1142206, 1, 100),
    Array(1142207, 1, 100),
    Array(1142208, 1, 100),

);
//展示出來的獎品
let showItems = Array(
    1140001,
    1140002,
    1141000,
    1141001,

    1142205,
    1142206,
    1142207,
    1142208,


    1141002,
    1142000,
    1142001,
    1142002,
    1142003,
    1142004,
    1142005,
    1142006,
    1142007,
    1142008,
    1142009,
    1142010,
    1142011,
    1142013,
    1142014,
    1142015,
    1142016,
    1142017,
    1142018,
    1142019,
    1142020,
    1142021,
    1142022,
    1142023,
    1142024,
    1142025,
    1142026,
    1142027,
    1142028,
    1142029,
    1142030,
    1142031,
    1142032,
    1142033,
    1142034,
    1142035,
    1142036,
    1142037,
    1142038,
    1142039,
    1142040,
    1142041,
    1142042,
    1142043,
    1142044,
    1142045,
    1142046,
    1142047,
    1142048,
    1142049,
    1142050,
    1142051,
    1142052,
    1142053,
    1142054,
    1142055,
    1142056,
    1142057,
    1142058,
    1142059,
    1142060,
    1142061,
    1142062,
    1142063,
    1142064,
    1142065,
    1142066,
    1142067,
    1142068,
    1142069,
    1142070,
    1142071,
    1142072,
    1142073,
    1142074,
    1142075,
    1142076,
    1142077,
    1142078,
    1142079,
    1142080,
    1142081,
    1142082,
    1142083,
    1142084,
    1142085,
    1142086,
    1142087,
    1142088,
    1142089,
    1142090,
    1142091,
    1142092,
    1142093,
    1142094,
    1142095,
    1142096,
    1142097,
    1142098,
    1142099,
    1142100,
    1142101,
    1142107,
    1142108,
    1142109,
    1142110,
    1142111,
    1142112,
    1142113,
    1142114,
    1142115,
    1142116,
    1142117,
    1142118,
    1142119,
    1142120,
    1142122,
    1142123,
    1142124,
    1142125,
    1142126,
    1142134,
    1142135,
    1142136,
    1142137,
    1142138,
    1142139,
    1142140,
    1142141,
    1142142,
    1142143,
    1142144,
    1142149,
    1142150,
    1142151,
    1142166,
    1142187,
    1142188,
    1142190,
    1142191,
    1142217,
    1142218,
    1142228,
    1142263,
    1142264,
    1142265,
    1142295,
    1142296,
    1142297,
    1142298,
    1142299,
    1142300,
    1142301,
    1142305,
    1142306,
    1142307,
    1142329,
    1142334,
    1142335,
    1142349,
    1142358,
    1142360,
    1142373,
    1142406,
    1142408,
    1142441,
    1142442,
    1142443,
    1142444,
    1142457,
    1142477,
    1142511,
    1142512,
    1142543,
    1142558,
    1142569,
    1142573,
    1142627,
    1142656,
    1142967,
    1190101,
    1190546,
    1142178,
    1142229,
    1142230,
    1142231,
    1142232,
    1142233,
    1142234,
    1142235,
    1142260,
    1142289,
    1142290,
    1142291,
    1142308,
    1142309,
    1142357,
    1142371,
    1142445,
    1142446,
    1142447,
    1142448,
    1142471,
    1142473,
    1142474,
    1142475,
    1142490,
    1142491,
    1142492,
    1142493,
    1142494,
    1142506,
    1142507,
    1142508,
    1142509,
    1142510,
    1142638,
    1142639,
    1142640,
    1142641,
    1142676,
    1142677,
    1142678,
    1142679,
    1142697,
    1142721,
    1142786,
    1142788,
    1142790,
    1142791,
    1142792,
    1142793,
    1142794,
    1142805,
    1142813,
    1182076,
    1182077,
    1182078,
    1182092,
    1182093,
    1182094,
    1182095,
    1182096,
    1142795,
    1142758,
    1182259,
    1142970,
    1142988,
    1143009,
    1143026,
    1143007,
    1143008,
    1143043,
    1143066,
    1143067,
    1143068,
    1143069,
    1143070,
    1143071,
    1143072,
    1143073,
    1143074,
    1143075,
    1143076,
    1143077,
    1143112,
    1143220,
    1143233,
    1142403,
    1143199,
    1142871,
    1142966,
    1142393,
    1143037,
    1142836,
    1143115,
    1143242,
    1143240,
    1143139,
    1143064,
    1143059,
    1143136,
    1143105,
    1143102,
    1143141,
    1143217,
    1142888,
    1142971,
    1142908,
    1142907,
    1143126,
    1142884,
    1142834,
    1142835,
    1142789,
    1142723,
    1142667,
    1142666,
    1143000,
    1142925,
    1143265,
    1143271,
    1143255,
    1143244,
    1142955,
    1142960,
    1143009,
    1142759,
    1143021,
    1142760,
    1142761,
    1142762,
    1142763,
    1142840,
    1143271,
    1143265,
    1143259,
    1143258,
    1143246,
    1143239,
    1143238,
    1143236,
    1143240,
    1143236,
    1143240,
    1143232,
    1143225,
    1143199,
    1143198,
    1143197,
    1143185,
    1143183,
    1143174,
    1143160,
    1143129,
    1143116,
    1143114,
    1143035,
    1142834,
    1142813,
    1142681,
    1142669,
    1142654,
    1142440,
    1142499,
    1142145,
    1143169,
    1142597,
    1142606,
    1142623,
    1142694,
    1142695,
    1142704,
    1142705,
    1142900,
    1142954,
    1142955,
    1142973,
    1142974,
    1142975,
    1142976,
    1143020,
    1143096,
    1143158


);

while (true) {
    switch (type) {
        case 1:
            title = "點券"
            haveMoney = parseInt(player.getCashShopCurrency(1));
            break;
        case 2:
            title = "抵用"
            haveMoney = parseInt(player.getCashShopCurrency(2));
            break;
        case 3:
            title = "金幣"
            haveMoney = "查閱揹包";
            break;
        case 4:
            title = "餘額"
            haveMoney = parseInt(getHyPay(1));
            break;
        default:
            title = "";
            haveMoney = parseInt(player.getAmountOfItem(type));
            break;
    }
    let str = "\t\t\t\t\t#fs16##r#e勛章轉蛋#fs12##n\r\n";
    str += "#b每次需要消耗 #r" + needNum + " #b個#v5530001##fs12##n\r\n";
    str += "\r\n#e#k獎品部分展示:\r\n"
    for (let i = 0; i < showItems.length; i++) {
        str += "#v" + showItems[i] + "#"
    }
    //str += "\r\n#k如果你足夠幸運，還能抽到2-3個箱子，是否抽獎？"
    let YN = npc.askYesNo(str);
    if (YN == 1) {
        let canGet = false;
        if (type != 3 && haveMoney >= needNum) {
            canGet = true;
        } else if (type == 3 && player.hasMesos(needNum)) {
            canGet = true;
        }
        if (canGet) {
            //抽獎
            let random = Math.floor(Math.random() * 100);
            let finalItems = Array();
            for (let i = 0; i < items.length; i++) {
                if (random < items[i][2]) finalItems.push(items[i]);
            }
            var random1 = Math.floor(Math.random() * finalItems.length);

            if (player.canGainItem(finalItems[random1][0], finalItems[random1][1])) {
                switch (type) {
                    case 1:
                        player.modifyCashShopCurrency(1, -needNum);
                        break;
                    case 2:
                        player.modifyCashShopCurrency(2, -needNum);
                        break;
                    case 3:
                        player.loseMesos(needNum);
                        break;
                    case 4:
                        gainHyPay(-needNum)
                        break;
                    default:
                        player.loseItem(type, needNum);
                        break;
                }
                if (finalItems[random1][2] <= laba) {
                    npc.broadcastPlayerNotice(7, "★★★勛章轉蛋★★★ " + player.getName() + " " + title + "轉蛋機中獲得了  " + player.makeItemWithId(finalItems[random1][0]).getItemName() + "");
                }
                player.gainItem(finalItems[random1][0], finalItems[random1][1]);
                npc.say("抽取成功！獲得#v" + finalItems[random1][0] + "# x " + finalItems[random1][1]);
            } else {
                npc.say("無法抽取物品，請清理揹包");
                player.runScript("玩具抽獎");
            }

        } else {
            npc.say("您的" + title + "不足！無法抽取");
            break;
        }
    } else {
        break;
    }
}


function getHyPay(type) {
    var sql = "select * from hypay where accname = '" + getAccountName() + "'";
    var push = player.customSqlResult(sql);
    if (push.size() > 0) {
        var result = push.get(0);
        if (type == 1) {
            var pay = result.get("pay");
        } else if (type == 2) {
            var pay = result.get("payUsed");
        } else if (type == 3) {
            var pay = result.get("payReward");
        }
    } else {
        player.customSqlInsert("INSERT INTO `hypay` (`accname`, `name`) VALUES ('" + getAccountName() + "', '" + player.getName() + "')");
        return getHyPay(1);
    }

    return pay;
}

function getAccountName() {
    var i = -1;
    var sql = "select name,id from accounts where id=" + player.getAccountId() + " order by name limit 1;";
    var push = player.customSqlResult(sql);
    if (push.size() > 0) {
        var result = push.get(0);
        var name = result.get("name");
    }

    return name;
}

function gainHyPay(count) {
    var sql = "update hypay set pay =pay+? where accname = '" + getAccountName() + "';";
    player.customSqlUpdate(sql, count);
}