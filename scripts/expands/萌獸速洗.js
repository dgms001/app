var status = -1
var txt;
/*------------------------------------------------------------*/
var a30 = "#fEffect/CharacterEff/1022223/6/0#" //跑马灯
var a31 = "#fEffect/CharacterEff/1022223/7/0#" //跑马灯
var a32 = "#fEffect/CharacterEff/1022223/8/0#" //跑马灯
var a38 = "#fItem/Pet/5000213.img/stand0/0#";//藍色惡魔
var f2 = "#fUI/CashShop/CSBeauty/hairColor/Enable/2#"
var f3 = "#fUI/CashShop/CSBeauty/hairColor/Enable/3#"
var f4 = "#fUI/CashShop/CSBeauty/hairColor/Enable/4#"
var f5 = "#fUI/CashShop/CSBeauty/hairColor/Enable/5#"
var d1 = "萌獸一鍵升級"
var d2 = "萌獸速洗"
var d3 = "萌獸更變造型"
var d4 = "萌獸更變技能"
var d5 = "返回选单"
var toDrop1 = player.getInventorySlot(2, 1);
var toDrop = toDrop1.getFamiliarInfo();
if (toDrop1 == null) {
    npc.askMenuS("請確保消耗欄第一格有物品");
} else if (toDrop1.getMFLevel() == 0) {
    npc.askMenuS("請確保消耗欄第一格是萌獸");
} else {
    txt = "#fs21##e#r你好,這裡是速洗萌獸!!!\r\n\r\n";



    txt += "萌獸為:#v" + toDrop1.getDataId() + ":#\r\n";
    txt += "#b請先封印一次在速洗\r\n";
    txt += "#b一鍵滿級萌獸#r100#b萬楓點,變更萌獸形態#r10#b億楓幣\r\n";
    txt += "#b好潛能[#r紅字#b] #b一般潛能[藍字]  #b普通潛能[#k白字#b]\r\n\r\n";

    txt += "#b#L1#一鍵滿級萌獸#l #L2#速洗萌獸#l #L5#萌獸背包#l #L3#變換形態#l\r\n\r\n";//#L1#" + f2 + "一鍵升級#l      
    //txt += "\t\t#L3#" + f2 + "變更卡片造型#l  #L4#" + f3 + "變更萌獸技能#l\r\n\r\n";

}
let selection = npc.askMenuA(txt, true);
switch (selection) {
    case 1:
        if (toDrop1.getMFLevel() == 5) {
            npc.say("當前萌獸已經最大等級,無需升級");

        } else if (player.getCashShopCurrency(2) < 1000000) {
            player.showSystemMessage("楓點不足100萬!!!");
        } else {
            player.modifyCashShopCurrency(2, -1000000);
            toDrop.setLevel(5); //設置等級
            npc.say("修改成功,請更換分流生效");
        }
        break;
    case 5:
        player.openUI(0x251);
        break;
    case 2:
        while (true) {
            var Potential = Array(
                // 潛能名 潛能ID  #r為好東西 #b為一般 #k為垃圾
                Array("#r最終傷害+20%", 40016),

                Array("#k全屬性+20", 40017),
                Array("#k4秒內恢復20HP", 40018),
                Array("#k4秒內恢復20MP", 40019),
                Array("#bSTR+14%", 40020),
                Array("#bDEX+14%", 40021),
                Array("#bINT+14%", 40022),
                Array("#bLUK+14%", 40023),
                Array("#bMaxHP+14%", 40024),
                Array("#bMaxMP+14%", 40025),
                Array("#kDEX+1%", 40026),
                Array("#kDEX+1%", 40027),
                Array("#r物攻+14%", 40028),
                Array("#r魔攻+14%", 40029),
                Array("#b防禦力+14%", 40030),
                Array("#b防禦力+14%", 40031),
                Array("#bSTR+14%", 40020),
                Array("#bDEX+14%", 40021),
                Array("#bINT+14%", 40022),
                Array("#bLUK+14%", 40023),
                Array("#bMaxHP+14%", 40024),
                Array("#bMaxMP+14%", 40025),
                Array("#kDEX+1%", 40026),
                Array("#kDEX+1%", 40027),
                Array("#r物攻+14%", 40028),
                Array("#r魔攻+14%", 40029),
                Array("#b防禦力+14%", 40030),
                Array("#b防禦力+14%", 40031),
                Array("#k攻擊有3%概率恢復50HP", 40032),
                Array("#k攻擊有3%概率恢復50MP", 40033),
                Array("#k攻擊有12%概率發動中毒效果", 40034),
                Array("#k攻擊有12%概率發動眩暈效果", 40035),
                Array("#k攻擊有12%概率發動緩慢效果", 40036),
                Array("#k攻擊有12%概率發動暗黑效果", 40037),
                Array("#k攻擊有12%概率發動冰結效果", 40038),
                Array("#k攻擊有12%概率發動封印效果", 40039),
                Array("#b無視怪物防禦率+45%", 40040),
                Array("#k依角色攻擊力的90%追加萌獸攻擊力", 40041),
                Array("#b依角色全部屬性的90%追加萌獸攻擊力", 40042),
                Array("#r加持技能持續時間+50%", 40043),
                Array("#r加持技能持續時間+50%", 40043),
                Array("#k依照被動技能2來增加", 40044),
                Array("#k全屬性+20", 40017),
                Array("#k4秒內恢復20HP", 40018),
                Array("#k4秒內恢復20MP", 40019),
                Array("#bSTR+14%", 40020),
                Array("#bDEX+14%", 40021),
                Array("#bINT+14%", 40022),
                Array("#bLUK+14%", 40023),
                Array("#bMaxHP+14%", 40024),
                Array("#bMaxMP+14%", 40025),
                Array("#kDEX+1%", 40026),
                Array("#kDEX+1%", 40027),
                Array("#r物攻+14%", 40028),
                Array("#r魔攻+14%", 40029),
                Array("#b防禦力+14%", 40030),
                Array("#b防禦力+14%", 40031),
                Array("#k攻擊有3%概率恢復50HP", 40032),
                Array("#k攻擊有3%概率恢復50MP", 40033),
                Array("#k攻擊有12%概率發動中毒效果", 40034),
                Array("#k攻擊有12%概率發動眩暈效果", 40035),
                Array("#k攻擊有12%概率發動緩慢效果", 40036),
                Array("#k攻擊有12%概率發動暗黑效果", 40037),
                Array("#k攻擊有12%概率發動冰結效果", 40038),
                Array("#k攻擊有12%概率發動封印效果", 40039),
                Array("#b無視怪物防禦率+45%", 40040),
                Array("#k依角色攻擊力的90%追加萌獸攻擊力", 40041),
                Array("#b依角色全部屬性的90%追加萌獸攻擊力", 40042),
                Array("#r加持技能持續時間+50%", 40043),
                Array("#k依照被動技能2來增加", 40044),
            );

            if (!player.hasItem(5743003, 1)) {
                npc.say("萌獸方塊不足!!!");
            } else {
                var PotentiaA = getMinAndMax(0, 2); //再次減少最終傷害概率
                var Potentiall = getMinAndMax(PotentiaA, 56);
                var Potential2 = getMinAndMax(PotentiaA, 56);
                var Potential3 = getMinAndMax(PotentiaA, 56);
                player.loseItem(5743003, 1);
                toDrop.setOption1(Potential[Potentiall][1]); //設置潛能1
                toDrop.setOption2(Potential[Potential2][1]); //設置潛能2
                toDrop.setOption3(Potential[Potential3][1]); //設置潛能3
                if (Potential[Potentiall][0].substring(1, 2) == "r" && Potential[Potential2][0].substring(1, 2) == "r") {
                    let ACCA = npc.askYesNoSNoEsc("#fs16##e#r\t\t\t當前潛能:\r\n\r\n#b" + Potential[Potentiall][0] + "\r\n\r\n" + Potential[Potential2][0] + "\r\n\r\n" + Potential[Potential3][0] + "\r\n\r\n\r\n#fs14##b滿意按#r是#b切換分流生效 不滿意按#r否#b繼續");
                    if (ACCA == true) {
                        npc.say("潛能修改成功,請換線刷新,否則可能無效自行承擔後果");
                        break;
                    } else {

                    }
                } else if (Potential[Potentiall][0].substring(1, 2) == "r" && Potential[Potential3][0].substring(1, 2) == "r") {
                    let ACCB = npc.askYesNoSNoEsc("#fs16##e#r\t\t\t當前潛能:\r\n\r\n#b" + Potential[Potentiall][0] + "\r\n\r\n" + Potential[Potential2][0] + "\r\n\r\n" + Potential[Potential3][0] + "\r\n\r\n\r\n#fs14##b滿意按#r是#b切換分流生效 不滿意按#r否#b繼續");
                    if (ACCB == true) {
                        npc.say("潛能修改成功,請換線刷新,否則可能無效自行承擔後果");
                        break;
                    } else {

                    }
                } else if (Potential[Potential2][0].substring(1, 2) == "r" && Potential[Potential3][0].substring(1, 2) == "r") {
                    let ACCC = npc.askYesNoSNoEsc("#fs16##e#r\t\t\t當前潛能:\r\n\r\n#b" + Potential[Potentiall][0] + "\r\n\r\n" + Potential[Potential2][0] + "\r\n\r\n" + Potential[Potential3][0] + "\r\n\r\n\r\n#fs14##b滿意按#r是#b切換分流生效 不滿意按#r否#b繼續");
                    if (ACCC == true) {
                        npc.say("潛能修改成功,請換線刷新,否則可能無效自行承擔後果");
                        break;
                    } else {

                    }
                } else if (Potential[Potentiall][0].substring(1, 2) == "r" && Potential[Potential2][0].substring(1, 2) == "r" && Potential[Potential3][0].substring(1, 2) == "r") {
                    let ACCD = npc.askYesNoSNoEsc("#fs16##e#r\t\t\t當前潛能:\r\n\r\n#b" + Potential[Potentiall][0] + "\r\n\r\n" + Potential[Potential2][0] + "\r\n\r\n" + Potential[Potential3][0] + "\r\n\r\n\r\n#fs14##b滿意按#r是#b切換分流生效 不滿意按#r否#b繼續");
                    if (ACCD == true) {
                        npc.say("潛能修改成功,請換線刷新,否則可能無效自行承擔後果");
                        break;
                    } else {

                    }
                } else {
                    npc.say("#fs16##e#r\t\t\t當前潛能:\r\n\r\n#b" + Potential[Potentiall][0] + "\r\n\r\n" + Potential[Potential2][0] + "\r\n\r\n" + Potential[Potential3][0] + "\r\n\r\n\r\n#fs14##b滿意按#r是#b切換分流生效 不滿意按#r確定#b繼續")
                }
            }
        }

        break;
    case 3:
        var familiarsArray = Array(
            //怪怪造型ID 萌獸物品ID 萌獸怪物ID
            Array(9970395, 2871207, 8645112),
            Array(9970396, 2871208, 9833653),
            Array(9970397, 2871209, 9833660),
            Array(9970398, 2871210, 8645113),
            Array(9970399, 2871211, 8645114),
            Array(9970400, 2871212, 8645115),
            Array(9970401, 2871213, 8645116),
            Array(9970402, 2871214, 8645118),
            Array(9970403, 2871215, 8645120),
            Array(9970404, 2871216, 8645121),
            Array(9970405, 2871217, 8645122),
            Array(9970407, 2871235, 9303081),
            Array(9970595, 2871550, 9601848),
            Array(9970408, 2871236, 8880420),
            Array(9970409, 2871237, 9833419),
            Array(9970410, 2871238, 9833420),
            Array(9970411, 2871239, 9833421),
            Array(9970412, 2871240, 9410777),
            Array(9970413, 2871241, 9410778),
            Array(9970414, 2871242, 9410779),
            Array(9970415, 2871243, 9601470),
            Array(9970416, 2871244, 9601471),
            Array(9970417, 2871245, 9601472),
            Array(9970418, 2871246, 9601473),
            Array(9970419, 2871247, 9601474),
            Array(9970420, 2871248, 9601475),
            Array(9970421, 2871249, 9833387),
            Array(9970422, 2871252, 2400600),
            Array(9970423, 2871253, 2400601),
            Array(9970424, 2871254, 2400602),
            Array(9970425, 2871255, 2400603),
            Array(9970426, 2871256, 2400610),
            Array(9970427, 2871257, 2400611),
            Array(9970428, 2871258, 2400612),
            Array(9970429, 2871259, 2400615),
            Array(9970430, 2871260, 8641055),
            Array(9970431, 2871261, 8641056),
            Array(9970432, 2871262, 8641057),
            Array(9970433, 2871263, 8641058),
            Array(9970434, 2871264, 9500650),
            Array(9970435, 2871265, 9601319),
            Array(9970436, 2871266, 9601320),
            Array(9970437, 2871267, 9601321),
            Array(9970438, 2871268, 9601322),
            Array(9970439, 2871269, 9601323),
            Array(9970440, 2871270, 8642050),
            Array(9970441, 2871271, 8642051),
            Array(9970442, 2871272, 8642052),
            Array(9970443, 2871273, 8642053),
            Array(9970444, 2871274, 8642054),
            Array(9970445, 2871275, 8642055),
            Array(9970446, 2871276, 9601521),
            Array(9970447, 2871277, 9601588),
            Array(9970448, 2871278, 9601589),
            Array(9970449, 2871279, 9601590),
            Array(9970450, 2871280, 9601591),
            Array(9970451, 2871281, 9601592),
            Array(9970452, 2871282, 9601593),
            Array(9970453, 2871295, 8230074),
            Array(9970454, 2871296, 8230075),
            Array(9970455, 2871297, 8230076),
            Array(9970456, 2871298, 8230077),
            Array(9970457, 2871299, 8230078),
            Array(9970458, 2871300, 8230079),
            Array(9970459, 2871301, 8230080),
            Array(9970460, 2871302, 8230081),
            Array(9970461, 2871303, 8230082),
            Array(9970462, 2871304, 8642100),
            Array(9970463, 2871305, 8642101),
            Array(9970464, 2871306, 8642102),
            Array(9970465, 2871307, 8642103),
            Array(9970466, 2871308, 8642104),
            Array(9970467, 2871309, 8642105),
            Array(9970468, 2871310, 8642106),
            Array(9970469, 2871311, 9020301),
            Array(9970470, 2871312, 9020302),
            Array(9970471, 2871313, 9020304),
            Array(9970472, 2871314, 9020305),
            Array(9970473, 2871315, 9020306),
            Array(9970474, 2871316, 9020307),
            Array(9970475, 2871317, 9020308),
            Array(9970476, 2871318, 9020309),
            Array(9970477, 2871319, 9020310),
            Array(9970478, 2871320, 9020311),
            Array(9970479, 2871321, 9020312),
            Array(9970480, 2871322, 9020313),
            Array(9970481, 2871323, 9020314),
            Array(9970482, 2871324, 9020315),
            Array(9970483, 2871325, 9020316),
            Array(9970484, 2871326, 9020317),
            Array(9970485, 2871327, 9601653),
            Array(9970486, 2871328, 9601654),
            Array(9970487, 2871329, 9601655),
            Array(9970488, 2871330, 9601656),
            Array(9970489, 2871331, 9601657),
            Array(9970490, 2871332, 9601658),
            Array(9970491, 2871333, 9601659),
            Array(9970492, 2871334, 9601660),
            Array(9970493, 2871335, 9601680),
            Array(9970494, 2871336, 9601678),
            Array(9970495, 2871338, 8645128),
            Array(9970496, 2871339, 8645133),
            Array(9970497, 2871340, 8645134),
            Array(9970498, 2871341, 2400651),
            Array(9970499, 2871342, 2400652),
            Array(9970500, 2871343, 2400655),
            Array(9970501, 2871344, 2400656),
            Array(9970502, 2871345, 2400653),
            Array(9970503, 2871346, 2400654),
            Array(9970504, 2871347, 2400657),
            Array(9970505, 2871348, 2400658),
            Array(9970506, 2871349, 8645200),
            Array(9970507, 2871350, 8645201),
            Array(9970508, 2871351, 8645202),
            Array(9970509, 2871352, 8645203),
            Array(9970510, 2871353, 8645204),
            Array(9970511, 2871354, 8645205),
            Array(9970512, 2871355, 8645209),
            Array(9970513, 2871356, 8645210),
            Array(9970514, 2871357, 8645211),
            Array(9970515, 2871358, 8880600),
            Array(9970516, 2871359, 8880603),
            Array(9970517, 2871360, 8880607),
            Array(9970518, 2871361, 8880609),
            Array(9970519, 2871362, 8880612),
            Array(9970520, 2871363, 9601710),
            Array(9970521, 2871365, 8645225),
            Array(9970522, 2871366, 8645226),
            Array(9970523, 2871367, 8645230),
            Array(9970524, 2871368, 8645231),
            Array(9970525, 2871369, 8645232),
            Array(9970526, 2871370, 8645227),
            Array(9970527, 2871371, 8645228),
            Array(9970528, 2871372, 8645221),
            Array(9970529, 2871373, 8645222),
            Array(9970530, 2871374, 8645223),
            Array(9970531, 2871375, 8645224),
            Array(9970532, 2871376, 9410796),
            Array(9970533, 2871377, 8880707),
            Array(9970534, 2871378, 8880708),
            Array(9970535, 2871379, 9601802),
            Array(9970536, 2871380, 9601803),
            Array(9970537, 2871381, 9601804),
            Array(9970538, 2871382, 9601805),
            Array(9970539, 2871383, 9601806),
            Array(9970540, 2871384, 9601807),
            Array(9970541, 2871385, 9601808),
            Array(9970542, 2871386, 9601809),
            Array(9970543, 2871337, 9601708),
            Array(9970544, 2871397, 8645260),
            Array(9970545, 2871398, 8645261),
            Array(9970546, 2871399, 8645262),
            Array(9970547, 2871400, 8645264),
            Array(9970548, 2871401, 8645266),
            Array(9970549, 2871422, 9601915),
            Array(9970550, 2871423, 9601916),
            Array(9970551, 2871424, 9601917),
            Array(9970552, 2871425, 9601918),
            Array(9970553, 2871426, 9601919),
            Array(9970554, 2871427, 9601920),
            Array(9970555, 2871428, 9601921),
            Array(9970556, 2871429, 9601922),
            Array(9970557, 2871430, 9833008),
            Array(9970558, 2871431, 9500148),
            Array(9970559, 2871432, 9410797),
            Array(9970560, 2871433, 9402080),
            Array(9970561, 2871434, 9402081),
            Array(9970562, 2871435, 9402082),
            Array(9970563, 2871436, 9402083),
            Array(9970564, 2871437, 9402084),
            Array(9970565, 2871438, 9402087),
            Array(9970566, 2871439, 9402088),
            Array(9970567, 2871440, 9402089),
            Array(9970568, 2871441, 9402093),
            Array(9970569, 2871442, 9402091),
            Array(9970118, 2872048, 9133401),
            Array(9970000, 2870000, 100100),
            Array(9970001, 2870001, 100101),
            Array(9970002, 2870002, 120100),
            Array(9970003, 2870003, 130100),
            Array(9970004, 2870004, 130101),
            Array(9970005, 2870005, 150000),
            Array(9970006, 2870006, 150001),
            Array(9970007, 2870007, 150002),
            Array(9970008, 2870008, 210100),
            Array(9970009, 2870009, 1110100),
            Array(9970010, 2870010, 1110101),
            Array(9970011, 2870011, 1110130),
            Array(9970012, 2870012, 1120100),
            Array(9970013, 2870013, 1130100),
            Array(9970014, 2870014, 1140100),
            Array(9970015, 2870015, 1140130),
            Array(9970016, 2870016, 1150000),
            Array(9970017, 2870017, 1150001),
            Array(9970018, 2870018, 1150002),
            Array(9970019, 2870019, 1210100),
            Array(9970020, 2870020, 1210101),
            Array(9970021, 2870021, 1210102),
            Array(9970022, 2870022, 1210103),
            Array(9970023, 2870023, 1210104),
            Array(9970024, 2870024, 1210111),
            Array(9970025, 2870034, 2110200),
            Array(9970026, 2870035, 2110301),
            Array(9970027, 2870036, 2130100),
            Array(9970028, 2870037, 2130103),
            Array(9970029, 2870038, 2150000),
            Array(9970030, 2870039, 2150001),
            Array(9970031, 2870040, 2150002),
            Array(9970032, 2870041, 2150003),
            Array(9970033, 2870042, 2220000),
            Array(9970034, 2870043, 2220100),
            Array(9970035, 2870044, 2220110),
            Array(9970036, 2870045, 2230100),
            Array(9970037, 2870046, 2230101),
            Array(9970038, 2870047, 2230102),
            Array(9970039, 2870048, 2230105),
            Array(9970040, 2870049, 2230106),
            Array(9970041, 2870050, 2230107),
            Array(9970042, 2870051, 2230108),
            Array(9970043, 2870052, 2230109),
            Array(9970044, 2870053, 2230110),
            Array(9970045, 2870054, 2230111),
            Array(9970046, 2870055, 2230112),
            Array(9970047, 2870056, 2230113),
            Array(9970048, 2870057, 2230114),
            Array(9970049, 2870058, 2230131),
            Array(9970050, 2870059, 2230200),
            Array(9970051, 2870060, 2300100),
            Array(9970052, 2870079, 3210200),
            Array(9970053, 2870080, 3210201),
            Array(9970054, 2870081, 3210202),
            Array(9970055, 2870108, 3300000),
            Array(9970056, 2870109, 3300001),
            Array(9970057, 2870110, 3300002),
            Array(9970058, 2870111, 3300003),
            Array(9970059, 2870112, 3300004),
            Array(9970060, 2870113, 3300005),
            Array(9970061, 2870114, 3300006),
            Array(9970062, 2870115, 3300007),
            Array(9970063, 2870117, 9410005),
            Array(9970064, 2870118, 9410006),
            Array(9970065, 2870119, 9410007),
            Array(9970066, 2870120, 3400003),
            Array(9970067, 2870121, 3400005),
            Array(9970068, 2870122, 3400007),
            Array(9970069, 2870123, 3400008),
            Array(9970070, 2870124, 4110300),
            Array(9970071, 2870125, 4110301),
            Array(9970072, 2870126, 4110302),
            Array(9970073, 2870127, 4130100),
            Array(9970074, 2870134, 4230103),
            Array(9970075, 2870220, 1210102),
            Array(9970076, 2870241, 6130203),
            Array(9970077, 2870242, 6130204),
            Array(9970078, 2870244, 6130208),
            Array(9970079, 2870249, 6230100),
            Array(9970080, 2870256, 6230600),
            Array(9970081, 2870257, 6230601),
            Array(9970082, 2870274, 7130002),
            Array(9970083, 2870275, 7130003),
            Array(9970084, 2870279, 7130100),
            Array(9970085, 2870280, 7130101),
            Array(9970086, 2870283, 7130104),
            Array(9970087, 2870289, 7130500),
            Array(9970088, 2870290, 7130501),
            Array(9970089, 2870316, 8140101),
            Array(9970090, 2870317, 8140102),
            Array(9970091, 2870318, 8140103),
            Array(9970092, 2870319, 8140110),
            Array(9970093, 2870320, 8140111),
            Array(9970094, 2870323, 8140500),
            Array(9970095, 2870324, 8140600),
            Array(9970096, 2870325, 8140700),
            Array(9970097, 2870326, 8140701),
            Array(9970098, 2870116, 3300008),
            Array(9970099, 2870602, 9300758),
            Array(9970100, 2870603, 9300759),
            Array(9970101, 2870479, 8850005),
            Array(9970102, 2870480, 8850006),
            Array(9970103, 2870481, 8850007),
            Array(9970104, 2870482, 8850008),
            Array(9970105, 2870483, 8850009),
            Array(9970106, 2870484, 8850010),
            Array(9970107, 2870485, 8850011),
            Array(9970108, 2871094, 9400735),
            Array(9970109, 2871096, 9400741),
            Array(9970110, 2871095, 9400738),
            Array(9970111, 2870379, 8820001),
            Array(9970112, 2870380, 8820007),
            Array(9970113, 2870459, 8610000),
            Array(9970114, 2870460, 8610001),
            Array(9970115, 2870461, 8610002),
            Array(9970116, 2870462, 8610003),
            Array(9970117, 2870463, 8610004),
            Array(9970118, 2872048, 9410821),
            Array(9970119, 2872049, 9410801),
            Array(9970120, 2872050, 9410855),
            Array(9970121, 2870679, 8240164),
            Array(9970122, 2870680, 3503004),
            Array(9970123, 2870681, 3503006),
            Array(9970124, 2870682, 3503003),
            Array(9970125, 2870683, 3503007),
            Array(9970126, 2870684, 3503009),
            Array(9970127, 2870685, 8240162),
            Array(9970128, 2870686, 8240133),
            Array(9970129, 2870687, 9833008),
            Array(9970130, 2870688, 8880101),
            Array(9970131, 2870763, 9450010),
            Array(9970132, 2871000, 9400000),
            Array(9970133, 2871001, 9400001),
            Array(9970134, 2871002, 9400002),
            Array(9970135, 2871003, 9400003),
            Array(9970136, 2871004, 9400004),
            Array(9970137, 2871011, 9400013),
            Array(9970138, 2870571, 8880000),
            Array(9970139, 2872019, 9500193),
            Array(9970140, 2872022, 9500300),
            Array(9970141, 2872023, 9500301),
            Array(9970142, 2872020, 9500195),
            Array(9970143, 2872021, 9500196),
            Array(9970144, 2872018, 9500191),
            Array(9970145, 2872017, 9500190),
            Array(9970146, 2870791, 8630000),
            Array(9970147, 2870792, 8630001),
            Array(9970148, 2870793, 8630002),
            Array(9970149, 2870794, 8630003),
            Array(9970150, 2870795, 8630004),
            Array(9970151, 2870796, 8630005),
            Array(9970152, 2870797, 8630006),
            Array(9970153, 2870798, 8630007),
            Array(9970154, 2870799, 8630008),
            Array(9970155, 2870800, 8630009),
            Array(9970156, 2870801, 8630010),
            Array(9970157, 2870802, 8630011),
            Array(9970158, 2870803, 8630012),
            Array(9970159, 2870804, 8630013),
            Array(9970160, 2870805, 8630014),
            Array(9970161, 2870664, 8641000),
            Array(9970162, 2870672, 8641001),
            Array(9970163, 2870673, 8641005),
            Array(9970164, 2870689, 8641007),
            Array(9970165, 2870690, 8642002),
            Array(9970166, 2870691, 8642006),
            Array(9970167, 2870692, 8642012),
            Array(9970168, 2870693, 8642022),
            Array(9970169, 2870694, 8643000),
            Array(9970170, 2870695, 8643001),
            Array(9970171, 2870696, 8643003),
            Array(9970172, 2870697, 8643011),
            Array(9970173, 2870698, 8880140),
            Array(9970174, 2870577, 8910000),
            Array(9970175, 2870528, 9421581),
            Array(9970176, 2870529, 9421562),
            Array(9970177, 2870530, 9421563),
            Array(9970178, 2870531, 9421514),
            Array(9970179, 2870532, 9421512),
            Array(9970180, 2870537, 9421511),
            Array(9970181, 2870538, 9421513),
            Array(9970182, 2870761, 9450022),
            Array(9970183, 2870762, 9450014),
            Array(9970184, 2870765, 9450020),
            Array(9970185, 2870534, 9421565),
            Array(9970186, 2870699, 4230139),
            Array(9970187, 2870700, 8240098),
            Array(9970188, 2870701, 8240099),
            Array(9970189, 2870702, 9402225),
            Array(9970190, 2870849, 9402190),
            Array(9970191, 2870850, 9402191),
            Array(9970192, 2870851, 9402192),
            Array(9970193, 2870852, 9402193),
            Array(9970207, 2870837, 8644000),
            Array(9970208, 2870838, 8644001),
            Array(9970209, 2870839, 8644004),
            Array(9970210, 2870840, 8644005),
            Array(9970211, 2870841, 8644010),
            Array(9970213, 2870843, 8644012),
            Array(9970214, 2870844, 9300684),
            Array(9970215, 2870845, 9300691),
            Array(9970216, 2870846, 9300686),
            Array(9970217, 2870847, 9300688),
            Array(9970218, 2870848, 9300685),
            Array(9970219, 2870853, 9300435),
            Array(9970220, 2870854, 9300028),
            Array(9970221, 2870855, 9303103),
            Array(9970222, 2870856, 9303104),
            Array(9970223, 2870857, 9303105),
            Array(9970224, 2870858, 9303106),
            Array(9970225, 2870859, 9303107),
            Array(9970226, 2870860, 9303108),
            Array(9970227, 2870861, 8880150),
            Array(9970228, 2870862, 9300534),
            Array(9970229, 2870863, 9309207),
            Array(9970230, 2870864, 9309208),
            Array(9970236, 2870870, 2400325),
            Array(9970237, 2870871, 2400315),
            Array(9970238, 2870872, 2400317),
            Array(9970239, 2870873, 2400318),
            Array(9970240, 2870874, 9300687),
            Array(9970241, 2870875, 9300689),
            Array(9970242, 2870876, 9300690),
            Array(9970243, 2870878, 8880110),
            Array(9970244, 2870879, 8870200),
            Array(9970245, 2870880, 9001014),
            Array(9970246, 2870881, 2400265),
            Array(9970247, 2870882, 2400258),
            Array(9970248, 2870883, 9300823),
            Array(9970249, 2870884, 8644412),
            Array(9970250, 2870885, 8644411),
            Array(9970251, 2870886, 8644409),
            Array(9970252, 2870887, 8644410),
            Array(9970253, 2870888, 8644502),
            Array(9970254, 2870889, 8644503),
            Array(9970255, 2870890, 8644504),
            Array(9970256, 2870891, 8644505),
            Array(9970257, 2870892, 8644506),
            Array(9970258, 2870893, 8644507),
            Array(9970259, 2870894, 8644508),
            Array(9970260, 2870895, 8644509),
            Array(9970261, 2870896, 8644520),
            Array(9970262, 2870897, 8880301),
            Array(9970263, 2870898, 8880302),
            Array(9970264, 2870899, 9402356),
            Array(9970265, 2870900, 9402358),
            Array(9970266, 2870901, 9402358),
            Array(9970267, 2870902, 9402359),
            Array(9970268, 2870903, 9402359),
            Array(9970269, 2870904, 9402361),
            Array(9970270, 2870905, 9402362),
            Array(9970271, 2870906, 9402363),
            Array(9970272, 2870907, 9402364),
            Array(9970273, 2870908, 9402365),
            Array(9970274, 2870909, 9402366),
            Array(9970275, 2870910, 9402367),
            Array(9970276, 2870911, 9402368),
            Array(9970277, 2870912, 9402369),
            Array(9970278, 2870913, 9402382),
            Array(9970279, 2870914, 9402383),
            Array(9970280, 2870915, 9402384),
            Array(9970281, 2870916, 9402385),
            Array(9970282, 2870917, 9402386),
            Array(9970283, 2870918, 9402387),
            Array(9970284, 2870919, 9402388),
            Array(9970285, 2870920, 9402389),
            Array(9970286, 2870921, 9402390),
            Array(9970287, 2870922, 9402391),
            Array(9970288, 2870923, 9303135),
            Array(9970289, 2870924, 9303136),
            Array(9970290, 2870925, 9303137),
            Array(9970291, 2870926, 9303138),
            Array(9970292, 2870927, 9303139),
            Array(9970293, 2870928, 2600911),
            Array(9970294, 2870929, 9500526),
            Array(9970295, 2870930, 9500528),
            Array(9970296, 2870931, 9500579),
            Array(9970297, 2870932, 9500580),
            Array(9970298, 2870933, 9402401),
            Array(9970299, 2870934, 9402402),
            Array(9970300, 2870935, 9402403),
            Array(9970301, 2870936, 8644724),
            Array(9970302, 2870937, 8644725),
            Array(9970303, 2870938, 8644726),
            Array(9970304, 2870939, 8644727),
            Array(9970305, 2870940, 8644728),
            Array(9970306, 2870941, 8880403),
            Array(9970307, 2870942, 8880404),
            Array(9970308, 2870943, 8880405),
            Array(9970309, 2870944, 9001058),
            Array(9970310, 2870945, 2400113),
            Array(9970311, 2870946, 2400114),
            Array(9970312, 2870947, 2400115),
            Array(9970313, 2870948, 2700313),
            Array(9970314, 2870949, 2700314),
            Array(9970315, 2870950, 8645009),
            Array(9970316, 2870951, 8645012),
            Array(9970317, 2870952, 8645010),
            Array(9970318, 2870953, 8645011),
            Array(9970319, 2870954, 8645022),
            Array(9970320, 2870955, 9300752),
            Array(9970321, 2870956, 9300753),
            Array(9970322, 2870957, 9300754),
            Array(9970323, 2870958, 9300756),
            Array(9970324, 2870959, 9300757),
            Array(9970325, 2870960, 9300881),
            Array(9970326, 2870961, 9300882),
            Array(9970327, 2870962, 9300883),
            Array(9970328, 2870963, 2400251),
            Array(9970329, 2870964, 5250006),
            Array(9970330, 2870965, 5250005),
            Array(9970331, 2870966, 2400256),
            Array(9970332, 2870967, 2400257),
            Array(9970333, 2870968, 9300711),
            Array(9970334, 2870969, 9300764),
            Array(9970335, 2870970, 9300765),
            Array(9970336, 2870971, 9300768),
            Array(9970337, 2870972, 8230070),
            Array(9970338, 2870973, 8230071),
            Array(9970339, 2870974, 9001037),
            Array(9970340, 2870975, 9001038),
            Array(9970341, 2870976, 9410774),
            Array(9970342, 2870977, 8644402),
            Array(9970343, 2870978, 8644405),
            Array(9970344, 2870979, 8644406),
            Array(9970345, 2870980, 8644719),
            Array(9970346, 2870981, 8644644),
            Array(9970347, 2870982, 8644619),
            Array(9970348, 2870983, 3501104),
            Array(9970349, 2870984, 3501106),
            Array(9970350, 2870985, 3501107),
            Array(9970351, 2870986, 3501108),
            Array(9970352, 2870987, 3501109),
            Array(9970353, 2870988, 2300271),
            Array(9970354, 2870989, 2300261),
            Array(9970355, 2870990, 2300262),
            Array(9970356, 2870991, 2300263),
            Array(9970357, 2870992, 2300268),
            Array(9970358, 2870993, 9833382),
            Array(9970359, 2870994, 9833380),
            Array(9970360, 2870995, 9833381),
            Array(9970361, 2871177, 2700306),
            Array(9970362, 2871178, 2700307),
            Array(9970363, 2871179, 2700308),
            Array(9970364, 2871180, 2700111),
            Array(9970365, 2871181, 2700113),
            Array(9970366, 2871182, 2700115),
            Array(9970367, 2871183, 2700116),
            Array(9970368, 2871184, 9309200),
            Array(9970369, 2871185, 9309205),
            Array(9970370, 2871186, 9309203),
            Array(9970371, 2871187, 9309206),
            Array(9970372, 2870996, 9410775),
            Array(9970373, 2870997, 9410776),
            Array(9970374, 2870998, 8145003),
            Array(9970375, 2870999, 8145004),
            Array(9970376, 2871188, 8145006),
            Array(9970377, 2871189, 8145007),
            Array(9970378, 2871190, 8145008),
            Array(9970379, 2871191, 8145200),
            Array(9970380, 2871192, 8145100),
            Array(9970381, 2871193, 2400377),
            Array(9970382, 2871194, 2400375),
            Array(9970383, 2871195, 2400376),
            Array(9970384, 2871196, 2400550),
            Array(9970385, 2871197, 2400551),
            Array(9970386, 2871198, 2400552),
            Array(9970387, 2871199, 2400553),
            Array(9970388, 2871200, 2400554),
            Array(9970389, 2871201, 2400555),
            Array(9970390, 2871202, 2400556),
            Array(9970391, 2871203, 2400557),
            Array(9970392, 2871204, 2400558),
            Array(9970393, 2871205, 2400559),
            Array(9970394, 2871206, 8645111),

            Array(9970570, 2871443, 9402094));

        var text = "#fs21##r#e當前形態萌獸[#v" + toDrop1.getDataId() + "#]\r\n";
        text += "#fs16##b#e請選擇你想要的外形\r\n";
        for (var i = 0; i < familiarsArray.length; i++) {
            text += "#L" + i + "##v" + familiarsArray[i][1] + "##o" + familiarsArray[i][2] + "##l\r\n";
        }
        var selected = npc.askMenuA(text);
        var yes = npc.askYesNo("#fs21##r#e\t您是否要花費10E楓幣將\r\n\r\n\r\n\t\t#v" + toDrop1.getDataId() + "##b外形改變為#v" + familiarsArray[selected][1] + "#");
        if (yes == 1) {
            if (!player.hasMesos(1000000000)) {
                npc.say("楓幣不足10E");
            } else {
                player.loseMesos(1000000000);
                toDrop1.setItemId(familiarsArray[selected][1]);
                player.updateItem(1, toDrop1); //更新卡片ID
                npc.say("修改成功,請切換分流生效");
            }
        }
        break;
    case 4:
        var familMobId = Array(
            Array(801, "突進-對2隻怪物以60%機率發動擊退攻擊"),
            Array(802, "誘導-對2隻怪物以60%機率發動拉怪攻擊"),
            Array(803, "嚎叫-對2隻怪物以60%機率發動2秒暈眩攻擊"),
            Array(804, "注視-對2隻怪物以60%機率發動3秒微緩速攻擊"),
            Array(805, "中毒-對2隻怪物以60%機率發動3秒中毒攻擊"),
            Array(806, "突擊-對3隻怪物以80%機率發動擊退攻擊"),
            Array(807, "挑釁-對3隻怪物以80%機率發動拉怪攻擊"),
            Array(808, "咆哮-對3隻怪物以80%機率發動4秒暈眩攻擊"),
            Array(809, "凝視-對3隻怪物以80%機率發動6秒緩速攻擊"),
            Array(810, "猛毒-對3隻怪物以80%機率發動6秒中毒攻擊"),
            Array(812, "蟒蛇的毒液-對3隻怪物以80%機率發動8秒中毒攻擊"),
            Array(813, "蝸牛催眠曲-對4隻怪物以80%機率發動6秒緩速攻擊"),
            Array(814, "刺眼光線-對3隻怪物以80%機率發動8秒緩速攻擊"),
            Array(817, "咕機噗機-對4隻怪物以80%機率發動8秒緩速攻擊"),
            Array(818, "黃金雪吉拉的咆吼-對4隻怪物以80%機率發動6秒暈眩攻擊兩次"),
            Array(820, "獨眼怪的視線-對3隻怪物以100%機率發動10秒緩速攻擊"),
            Array(822, "元老的支援-對4隻怪物以80%機率發動擊退攻擊"),
            Array(823, "高分貝破壞-對4隻怪物以80%機率發動4秒暈眩攻擊兩次"),
            Array(825, "大王蜈毒-對3隻怪物以100%機率發動8秒中毒攻擊"),
            Array(827, "鬼怪的口哨-對4隻怪物以80%機率發動擊退攻擊"),
            Array(829, "牧羊衝擊-對4隻怪物以100%機率發動拉怪攻擊"),
            Array(830, "被遺忘玩偶的怨恨-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(831, "狼人的咆嘯-對4隻怪物以100%機率發動6秒暈眩攻擊兩次"),
            Array(833, "守護者的威脅-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(834, "時間重啟-對3隻怪物以80%機率發動8秒緩速攻擊"),
            Array(835, "巨魚的氣息-對4隻怪物以100%機率發動拉怪攻擊兩次"),
            Array(836, "鬼怪的口哨-對4隻怪物以80%機率發動擊退攻擊"),
            Array(837, "時間逆行-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(838, "牧羊衝擊-對4隻怪物以100%機率發動拉怪攻擊"),
            Array(839, "被遺忘玩偶的怨恨-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(840, "狼人的咆嘯-對4隻怪物以100%機率發動6秒暈眩攻擊兩次"),
            Array(841, "黑騎士的憤嚎-對4隻怪物以80%機率發動6秒暈眩攻擊"),
            Array(842, "守護者的威脅-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(843, "時間重啟-對3隻怪物以80%機率發動8秒緩速攻擊"),
            Array(844, "巨魚的氣息-對4隻怪物以100%機率發動拉怪攻擊兩次"),
            Array(845, "時間逆行-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(846, "怪物的憤怒-對4隻怪物以80%機率發動6秒暈眩攻擊"),
            Array(847, "孤獨的吶喊-對3隻怪物以80%機率發動8秒暈眩攻擊"),
            Array(848, "銅牆鐵壁-對4隻怪物以100%機率發動拉怪攻擊兩次"),
            Array(849, "孤獨的吶喊-對3隻怪物以80%機率發動8秒暈眩攻擊"),
            Array(850, "銅牆鐵壁-對4隻怪物以100%機率發動拉怪攻擊兩次"),
            Array(851, "朦幻的催眠-對4隻怪物以80%機率發動8秒緩速攻擊"),
            Array(853, "阿瑪塔衝擊波-對4隻怪物以80%機率發動擊退攻擊兩次"),
            Array(854, "恐怖的旋律-對4隻怪物以100%機率發動6秒暈眩攻擊"),
            Array(856, "恐怖的旋律-對4隻怪物以100%機率發動6秒暈眩攻擊"),
            Array(857, "紅焰的陷阱-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(858, "詛咒的樂章-對4隻怪物以80%機率發動8秒緩速攻擊"),
            Array(859, "紅焰的陷阱-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(860, "超級機關槍-對3隻怪物以80%機率發動擊退攻擊三次"),
            Array(861, "黎明之鳴-對3隻怪物以80%機率發動8秒暈眩攻擊兩次"),
            Array(862, "巧克巧克崩-對4隻怪物以100%機率發動6秒暈眩攻擊兩次"),
            Array(863, "腦後逆轉攻擊-對3隻怪物以100%機率發動10秒暈眩攻擊"),
            Array(864, "雪吉拉的打嗝-對4隻怪物以100%機率發動8秒暈眩攻擊"),
            Array(865, "超級機關槍-對3隻怪物以80%機率發動擊退攻擊三次"),
            Array(866, "黎明之鳴-對3隻怪物以80%機率發動8秒暈眩攻擊兩次"),
            Array(867, "武林掌波-對4隻怪物以100%機率發動擊退攻擊兩次"),
            Array(868, "紅寶的生活-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(869, "熱烈的愛-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(870, "雪吉拉的打嗝-對4隻怪物以100%機率發動8秒暈眩攻擊"),
            Array(871, "娃娃的視線-對4隻怪物以80%機率發動4秒強效緩速攻擊"),
            Array(873, "菇菇寶貝的毒胞子-對4隻怪物以100%機率發動6秒中毒攻擊兩次"),
            Array(874, "催眠-對4隻怪物以80%機率發動8秒緩速攻擊"),
            Array(875, "引力-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(876, "強擊-對4隻怪物以80%機率發動擊退攻擊兩次"),
            Array(877, "致命毒素-對4隻怪物以80%機率發動8秒中毒攻擊"),
            Array(878, "衝擊波-對4隻怪物以80%機率發動6秒暈眩攻擊"),
            Array(879, "紅寶的生活-對4隻怪物以100%機率發動8秒緩速攻擊兩次"),
            Array(880, "綠水靈的黏著-對4隻怪物以100%機率發動拉怪攻擊四次"),
            Array(881, "緞帶肥肥連擊-對4隻怪物以100%機率發動擊退攻擊四次"),
            Array(882, "死亡菇菇的詛咒-對4隻怪物以100%機率發動8秒中毒攻擊兩次"),
            Array(883, "妖精的夜曲-對4隻怪物以100%機率發動6秒暈眩攻擊兩次"),
            Array(884, "海盜空中衝刺-廣域攻擊可朝最多5隻怪物展開推擠及四次攻擊"),
            Array(885, "裘可充斥-廣域攻擊可朝最多5隻怪物發動8秒間昏迷及兩次攻擊"),
            Array(886, "赤戰士的討伐-廣域攻擊可朝最多5隻怪物發動吸引及四次攻擊"),
            Array(887, "赤盜賊的猛毒-廣域攻擊可朝最多5隻怪物發動8秒間中毒及兩次攻擊"),
            Array(888, "忍者的赤焰-廣域攻擊可朝最多6隻怪物發動吸引及攻擊"),
            Array(889, "忍者的藍焰-廣域攻擊可朝最多6隻怪物發動推擠及攻擊"),
            Array(890, "時間支配-廣域攻擊可朝最多6隻怪物發動8秒間緩慢及攻擊"),
            Array(891, "武林妖究極技-廣域攻擊可朝最多8隻怪物展開四次攻擊"),
            Array(892, "集中掃射-廣域攻擊可朝最多12隻怪物展開攻擊"),
            Array(893, "集中砲擊-廣域攻擊可朝最多10隻怪物展開兩次攻擊"),
            Array(894, "領主的幫助-廣域攻擊可朝最多5隻怪物發動8秒間緩慢及兩次攻擊"),
            Array(811, "猴子王的詛咒-對4隻怪物以80%機率發動6秒中毒攻擊"),
            Array(815, "蘋果糖風味-對4隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(816, "大海漩渦-對3隻怪物以80%機率發動擊退攻擊三次"),
            Array(819, "巨大鱷魚的咆嘯-對4隻怪物以80%機率發動4秒暈眩攻擊兩次"),
            Array(821, "司令官的毒氣-對3隻怪物以100%機率發動8秒中毒攻擊"),
            Array(824, "女皇的呼喊-對3隻怪物以80%機率發動8秒暈眩攻擊"),
            Array(826, "冰霜之風-對3隻怪物以80%機率發動擊退攻擊三次"),
            Array(828, "螺旋衝擊-對4隻怪物以80%機率發動擊退攻擊兩次"),
            Array(832, "黑騎士的憤嚎-對4隻怪物以80%機率發動6秒暈眩攻擊"),
            Array(852, "母親的呼喚-對4隻怪物以100%機率發動拉怪攻擊兩次"),
            Array(855, "蛤蜊毒-對4隻怪物以80%機率發動8秒中毒攻擊"),
            Array(872, "九尾狐的擺尾-對3隻怪物以100%機率發動拉怪攻擊三次"),
            Array(895, "城壁墜落-廣域攻擊可朝最多6隻怪物發動8秒間昏迷及攻擊"),
            Array(896, "教官的地圖-廣域攻擊可朝最多8隻怪物發動吸引及攻擊"),
            Array(897, "靈魂師的威脅-對5隻怪物以80%機率發動6秒暈眩攻擊"),
            Array(898, "烈焰巫師的邀請-對5隻怪物以80%機率發動拉怪攻擊兩次"),
            Array(899, "破風使者的強風-對5隻怪物以80%機率發動擊退攻擊兩次"),
            Array(900, "暗夜行者的毒藥-對5隻怪物以80%機率發動8秒中毒攻擊"),
            Array(901, "閃雷悍將的凝視-對5隻怪物以80%機率發動8秒緩速攻擊"),
            Array(902, "神獸展翼-廣域攻擊可朝最多10隻怪物推擠展開兩次攻擊"),
            Array(904, "庫洛斯的一擊-召喚庫洛斯於2分鐘期間內攻擊周圍怪物"),
            Array(903, "女皇的詛咒-廣域攻擊可朝最多12隻怪物發動10秒間中毒並攻擊"),
            Array(905, "涅涅的威脅-對3隻怪物以90%機率發動8秒緩速攻擊"),
            Array(906, "嘟嘟的威脅-將3隻怪物以60%的機率推出並進行3次攻擊"),
            Array(907, "鈴鈴的威脅-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(908, "魔族士兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(909, "墮落魔族斧頭兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(910, "墮落魔族盾牌兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(911, "墮落魔族強化劍兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(912, "墮落魔族強化盾牌兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(913, "墮落魔族強化狼旗手的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(914, "遺跡魔蠍的毒針-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(915, "惡魔穆魯昆的詛咒-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(916, "惡魔穆魯昆的詛咒-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(917, "戴米安的憤怒-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(918, "魔族士兵的一擊-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(919, "惡魔穆魯昆的詛咒-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(925, "希拉的氣息-對2隻怪物以90%機率發動3秒暈眩攻擊"),
            Array(926, "瑪哈的龍捲風-對2隻怪物以90%機率發動3秒暈眩攻擊")
        );
        if (!player.hasMesos(3000000)) {
            npc.say("楓幣不足300W");
        } else {
            var skillid = getMinAndMax(0, 120); //技能範圍隨機
            player.loseMesos(3000000);
            toDrop.setSkill(familMobId[skillid][0]); //設置技能ID
            let ACCD = npc.askYesNoSNoEsc("技能更變為:" + familMobId[skillid][1] + "\r\n\r\n#b滿意本次技能,請按#r[是]#b並切換分流保存技能\r\n\r\n不滿意請按#r[否]#b繼續速洗萌獸\r\n\r\n#b注意:達到想要潛能時,請點擊是並切換分流\r\n本次消耗300w楓幣")
            if (ACCD == true) {
                npc.say("技能修改成功,請換分流生效");
                break;
            } else {
                player.runScript("萌獸速洗");
            }

            break;
        }
}

function getMinAndMax(minVal, maxVal) { //隨機 最大值 最小值
    return Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;
}
